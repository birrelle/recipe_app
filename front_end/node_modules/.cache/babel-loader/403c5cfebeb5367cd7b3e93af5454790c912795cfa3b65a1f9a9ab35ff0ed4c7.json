{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function* generateURLVariations(url, {\n  ignoreURLParametersMatching = [/^utm_/, /^fbclid$/],\n  directoryIndex = 'index.html',\n  cleanURLs = true,\n  urlManipulation\n} = {}) {\n  const urlObject = new URL(url, location.href);\n  urlObject.hash = '';\n  yield urlObject.href;\n  const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n  yield urlWithoutIgnoredParams.href;\n  if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n    const directoryURL = new URL(urlWithoutIgnoredParams.href);\n    directoryURL.pathname += directoryIndex;\n    yield directoryURL.href;\n  }\n  if (cleanURLs) {\n    const cleanURL = new URL(urlWithoutIgnoredParams.href);\n    cleanURL.pathname += '.html';\n    yield cleanURL.href;\n  }\n  if (urlManipulation) {\n    const additionalURLs = urlManipulation({\n      url: urlObject\n    });\n    for (const urlToAttempt of additionalURLs) {\n      yield urlToAttempt.href;\n    }\n  }\n}","map":{"version":3,"names":["removeIgnoredSearchParams","generateURLVariations","url","ignoreURLParametersMatching","directoryIndex","cleanURLs","urlManipulation","urlObject","URL","location","href","hash","urlWithoutIgnoredParams","pathname","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt"],"sources":["/Users/emilybirrell/Desktop/recipe_app/my-recipe-app/node_modules/workbox-precaching/utils/generateURLVariations.js"],"sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,yBAAyB,QAAQ,gCAAgC;AAC1E,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,UAAUC,qBAAqBA,CAACC,GAAG,EAAE;EAAEC,2BAA2B,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC;EAAEC,cAAc,GAAG,YAAY;EAAEC,SAAS,GAAG,IAAI;EAAEC;AAAiB,CAAC,GAAG,CAAC,CAAC,EAAE;EACzK,MAAMC,SAAS,GAAG,IAAIC,GAAG,CAACN,GAAG,EAAEO,QAAQ,CAACC,IAAI,CAAC;EAC7CH,SAAS,CAACI,IAAI,GAAG,EAAE;EACnB,MAAMJ,SAAS,CAACG,IAAI;EACpB,MAAME,uBAAuB,GAAGZ,yBAAyB,CAACO,SAAS,EAAEJ,2BAA2B,CAAC;EACjG,MAAMS,uBAAuB,CAACF,IAAI;EAClC,IAAIN,cAAc,IAAIQ,uBAAuB,CAACC,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IAClE,MAAMC,YAAY,GAAG,IAAIP,GAAG,CAACI,uBAAuB,CAACF,IAAI,CAAC;IAC1DK,YAAY,CAACF,QAAQ,IAAIT,cAAc;IACvC,MAAMW,YAAY,CAACL,IAAI;EAC3B;EACA,IAAIL,SAAS,EAAE;IACX,MAAMW,QAAQ,GAAG,IAAIR,GAAG,CAACI,uBAAuB,CAACF,IAAI,CAAC;IACtDM,QAAQ,CAACH,QAAQ,IAAI,OAAO;IAC5B,MAAMG,QAAQ,CAACN,IAAI;EACvB;EACA,IAAIJ,eAAe,EAAE;IACjB,MAAMW,cAAc,GAAGX,eAAe,CAAC;MAAEJ,GAAG,EAAEK;IAAU,CAAC,CAAC;IAC1D,KAAK,MAAMW,YAAY,IAAID,cAAc,EAAE;MACvC,MAAMC,YAAY,CAACR,IAAI;IAC3B;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}